Index: app/src/main/java/com/example/ugd1_a_kelompok9/Activity/RegisterActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.ugd1_a_kelompok9.Activity\r\n\r\nimport android.app.NotificationChannel\r\nimport android.app.NotificationManager\r\nimport android.app.PendingIntent\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.graphics.Color\r\nimport android.os.Build\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport androidx.core.app.NotificationCompat\r\nimport androidx.core.app.NotificationManagerCompat\r\nimport androidx.room.Room\r\nimport com.example.ugd1_a_kelompok9.NotificationReceiver\r\nimport com.example.ugd1_a_kelompok9.R\r\nimport com.example.ugd1_a_kelompok9.databinding.ActivityRegisterBinding\r\nimport com.example.ugd1_a_kelompok9.room.User\r\nimport com.example.ugd1_a_kelompok9.room.UserDB\r\nimport kotlinx.android.synthetic.main.activity_register.*\r\nimport kotlinx.coroutines.CoroutineScope\r\nimport kotlinx.coroutines.Dispatchers\r\nimport kotlinx.coroutines.launch\r\n\r\nclass RegisterActivity : AppCompatActivity() {\r\n    private lateinit var binding: ActivityRegisterBinding\r\n    private lateinit var db: UserDB\r\n    private val CHANNEL_ID_1 = \"channel_notification_01\"\r\n    private val CHANNEL_ID_2 = \"channel_notification_02\"\r\n    private val notificationId1 = 101\r\n    private val notificationId2 = 102\r\n//    private lateinit var email: TextInputEditText\r\n//    private lateinit var vEmail: TextInputLayout\r\n//    private lateinit var noTelp: TextInputEditText\r\n//    private lateinit var vnoTelp: TextInputLayout\r\n//    private lateinit var tanggalLahir: TextInputEditText\r\n//    private lateinit var vTglLahir: TextInputLayout\r\n//    private lateinit var username: TextInputEditText\r\n//    private lateinit var vUsername: TextInputLayout\r\n//    private lateinit var password: TextInputEditText\r\n//    private lateinit var vPassword: TextInputLayout\r\n//    private lateinit var btnRegister: Button\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityRegisterBinding.inflate(layoutInflater)\r\n\r\n        setContentView(binding.root!!)\r\n\r\n        createNotificationChannel()\r\n\r\n        db = Room.databaseBuilder(applicationContext, UserDB::class.java, \"appUser.db\").build()\r\n        binding!!.btnRegister.setOnClickListener {\r\n                sendNotification1()\r\n                CoroutineScope(Dispatchers.IO).launch {\r\n                    db.userDao().addUser(\r\n                        User(\r\n                            0,\r\n                            inputNama.text.toString(),\r\n                            inputUsername.text.toString(),\r\n                            inputPassword.text.toString(),\r\n                            inputEmail.text.toString(),\r\n                            inputNoTelp.text.toString(),\r\n                            inputTanggalLahir.text.toString()\r\n                        )\r\n                    )\r\n                    finish()\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    private fun createNotificationChannel() {\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n            val name = \"Notification Title\"\r\n            val descriptionText = \"Notification Description\"\r\n\r\n            val channel1 = NotificationChannel(\r\n                CHANNEL_ID_1,\r\n                name,\r\n                NotificationManager.IMPORTANCE_DEFAULT\r\n            ).apply {\r\n                description = descriptionText\r\n            }\r\n            val channel2 = NotificationChannel(\r\n                CHANNEL_ID_2,\r\n                name,\r\n                NotificationManager.IMPORTANCE_DEFAULT\r\n            ).apply {\r\n                description = descriptionText\r\n            }\r\n\r\n            val notificationManager: NotificationManager =\r\n                getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager\r\n            notificationManager.createNotificationChannel(channel1)\r\n            notificationManager.createNotificationChannel(channel2)\r\n        }\r\n    }\r\n\r\n        private fun sendNotification1(){\r\n\r\n            val intent : Intent = Intent(this, MainActivity::class.java).apply {\r\n                flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK\r\n            }\r\n\r\n            val pendingIntent : PendingIntent = PendingIntent.getActivity(this, 0, intent, 0)\r\n            val broadcastIntent : Intent = Intent( this, NotificationReceiver::class.java)\r\n            //broadcastIntent.putExtra(\"toastMessage\", binding?.etMessage?.text.toString())\r\n            val actionIntent = PendingIntent.getBroadcast(this, 0, broadcastIntent, PendingIntent.FLAG_UPDATE_CURRENT)\r\n\r\n            val builder = NotificationCompat.Builder(this, CHANNEL_ID_1)\r\n                .setSmallIcon(R.drawable.ic_baseline_notification_important_24)\r\n                .setContentTitle(\"Berhasil Registrasi\")\r\n                .setContentText(\"Registrasi akun berhasil!\")\r\n                .setCategory(NotificationCompat.CATEGORY_MESSAGE)\r\n                .setColor(Color.BLUE)\r\n                .setAutoCancel(true)\r\n                .setContentIntent(pendingIntent)\r\n                .addAction(R.mipmap.voyager_launcher_foreground, \"Toast\", actionIntent)\r\n                .setPriority(NotificationCompat.PRIORITY_DEFAULT)\r\n\r\n            with(NotificationManagerCompat.from(this)){\r\n                notify(notificationId1, builder.build())\r\n            }\r\n\r\n        }\r\n    private fun sendNotification2(){\r\n        val builder = NotificationCompat.Builder(this, CHANNEL_ID_1)\r\n            .setSmallIcon(R.drawable.ic_baseline_notification_important_24)\r\n            .setContentTitle(\"Proses Registrasi\")\r\n            .setContentText(\"Selamat anda berhasil registrasi!\")\r\n            .setPriority(NotificationCompat.PRIORITY_LOW)\r\n\r\n        with(NotificationManagerCompat.from(this)){\r\n            notify(notificationId2, builder.build())\r\n        }\r\n    }\r\n    }\r\n\r\n\r\n//            if(inputNama.text.toString() == \"\"){\r\n//                inputNama.setError(\"Nama Tidak Boleh Kosong\")\r\n//            }\r\n//            if(inputUsername.text.toString() == \"\"){\r\n//                inputUsername.setError(\"Username Tidak Boleh Kosong\")\r\n//            }\r\n//            if(inputPassword.text.toString() == \"\") {\r\n//                inputPassword.setError(\"Password Tidak Boleh Kosong\")\r\n//            }\r\n//            if(inputEmail.text.toString() == \"\"){\r\n//                inputEmail.setError(\"Email Tidak Boleh Kosong\")\r\n//            }\r\n//            if(inputNoTelp.text.toString() == \"\"){\r\n//                inputNoTelp.setError(\"No Telp Tidak Boleh Kosong\")\r\n//            }\r\n//            if(inputTanggalLahir.text.toString() == \"\"){\r\n//                inputTanggalLahir.setError(\"Tanggal Lahir Tidak Boleh Kosong\")\r\n//            } else {\r\n\r\n//    override fun onCreate(savedInstanceState: Bundle?) {\r\n//        super.onCreate(savedInstanceState)\r\n//        setContentView(R.layout.activity_register)\r\n//\r\n//        email = findViewById(R.id.inputEmail)\r\n//        vEmail = findViewById(R.id.regEmail)\r\n//        noTelp = findViewById(R.id.inputNoTelp)\r\n//        vnoTelp = findViewById(R.id.regNoTelp)\r\n//        tanggalLahir = findViewById(R.id.inputTanggalLahir)\r\n//        vTglLahir = findViewById(R.id.regTanggalLahir)\r\n//        username = findViewById(R.id.inputUsername)\r\n//        vUsername = findViewById(R.id.regUsername)\r\n//        password = findViewById(R.id.inputPassword)\r\n//        vPassword = findViewById(R.id.regPassword)\r\n//        btnRegister = findViewById(R.id.btnRegister)\r\n//\r\n//        btnRegister.setOnClickListener{\r\n//            var checkRegister = false\r\n//            val intent = Intent(this, LoginActivity::class.java)\r\n//            val mBundle = Bundle()\r\n//\r\n//            val LayUsername : String = vUsername.getEditText()?.getText().toString()\r\n//            val LayPassword : String = vPassword.getEditText()?.getText().toString()\r\n//            val LayNoTelp : String = vnoTelp.getEditText()?.getText().toString()\r\n//            val LayTgl : String = vTglLahir.getEditText()?.getText().toString()\r\n//            val LayEmail : String = vEmail.getEditText()?.getText().toString()\r\n//\r\n//            if (LayUsername.isEmpty()) {\r\n//                username.setError(\"Nama Tidak Boleh Kosong\")\r\n//            }\r\n//            if (LayPassword.isEmpty()) {\r\n//                password.setError(\"Password Tidak Boleh Kosong\")\r\n//            }\r\n//            if (LayNoTelp.isEmpty()) {\r\n//                noTelp.setError(\"Nomor Telepon Tidak Boleh Kosong\")\r\n//            }\r\n//            if (LayTgl.isEmpty()) {\r\n//                tanggalLahir.setError(\"Tanggal Lahir Tidak Boleh Kosong\")\r\n//            }\r\n//            if (LayEmail.isEmpty()) {\r\n//                email.setError(\"Email Tidak Boleh Kosong\")\r\n//            } else {\r\n//                //memasukkann data ke dalam bundle\r\n//                mBundle.putString(\"email\", email.text.toString())\r\n//                mBundle.putString(\"noTelp\", noTelp.text.toString())\r\n//                mBundle.putString(\"tanggalLahir\", tanggalLahir.text.toString())\r\n//                mBundle.putString(\"username\", username.text.toString())\r\n//                mBundle.putString(\"password\", password.text.toString())\r\n//                //melakukan intent dengan memanggil bundle\r\n//\r\n//                intent.putExtras(mBundle)\r\n//\r\n//                startActivity(intent)\r\n//            }\r\n//\r\n//        }\r\n//    }\r\n//}
===================================================================
diff --git a/app/src/main/java/com/example/ugd1_a_kelompok9/Activity/RegisterActivity.kt b/app/src/main/java/com/example/ugd1_a_kelompok9/Activity/RegisterActivity.kt
--- a/app/src/main/java/com/example/ugd1_a_kelompok9/Activity/RegisterActivity.kt	
+++ b/app/src/main/java/com/example/ugd1_a_kelompok9/Activity/RegisterActivity.kt	
@@ -5,6 +5,8 @@
 import android.app.PendingIntent
 import android.content.Context
 import android.content.Intent
+import android.graphics.Bitmap
+import android.graphics.BitmapFactory
 import android.graphics.Color
 import android.os.Build
 import androidx.appcompat.app.AppCompatActivity
@@ -23,7 +25,7 @@
 import kotlinx.coroutines.launch
 
 class RegisterActivity : AppCompatActivity() {
-    private lateinit var binding: ActivityRegisterBinding
+    private lateinit var binding : ActivityRegisterBinding
     private lateinit var db: UserDB
     private val CHANNEL_ID_1 = "channel_notification_01"
     private val CHANNEL_ID_2 = "channel_notification_02"
@@ -121,18 +123,30 @@
 
             with(NotificationManagerCompat.from(this)){
                 notify(notificationId1, builder.build())
+
             }
 
         }
     private fun sendNotification2(){
-        val builder = NotificationCompat.Builder(this, CHANNEL_ID_1)
+//        val builder = NotificationCompat.Builder(this, CHANNEL_ID_1)
+//            .setSmallIcon(R.drawable.ic_baseline_notification_important_24)
+//            .setContentTitle("Proses Registrasi")
+//            .setContentText("Selamat anda berhasil registrasi!")
+//            .setPriority(NotificationCompat.PRIORITY_LOW)
+
+        val myBitmap = BitmapFactory.decodeResource(resources, R.drawable.travel)
+        val builder = NotificationCompat.Builder(this, CHANNEL_ID_2)
             .setSmallIcon(R.drawable.ic_baseline_notification_important_24)
-            .setContentTitle("Proses Registrasi")
-            .setContentText("Selamat anda berhasil registrasi!")
-            .setPriority(NotificationCompat.PRIORITY_LOW)
+            .setContentTitle("Progress Notif")
+            .setContentText("Berhasil Registrasi")
+            .setLargeIcon(myBitmap)
+            .setStyle(NotificationCompat.BigPictureStyle()
+                .bigPicture(myBitmap)
+                .bigLargeIcon(myBitmap))
 
         with(NotificationManagerCompat.from(this)){
             notify(notificationId2, builder.build())
+
         }
     }
     }
